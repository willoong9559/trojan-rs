name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.os }} - ${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # macOS x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          # FreeBSD (交叉编译)
          - os: ubuntu-latest
            target: x86_64-unknown-freebsd

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build in release mode
        run: cargo build --release --target ${{ matrix.target }} --verbose

      - name: Run tests (only on native builds)
        if: matrix.target != 'x86_64-unknown-freebsd'
        run: cargo test --verbose

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rust-build-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/
